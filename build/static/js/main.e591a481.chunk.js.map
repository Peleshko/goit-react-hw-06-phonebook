{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-types.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","components/FormContact/FormContact.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","components/App/App.jsx","index.js","components/FormContact/FormContact.module.css","components/ContactList/ContactListItem/ContactListItem.module.css"],"names":["module","exports","contactsActions","addContacts","createAction","name","number","payload","id","nanoid","deleteContacts","changeFilter","contacts","createReducer","state","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","concat","logger","devTools","process","persistor","persistStore","getContacts","getFilter","getVisibleContacts","filters","contact","toLowerCase","includes","FormContact","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","resetState","className","s","form","onSubmit","preventDefault","map","toast","warn","label","input_name","type","pattern","onChange","title","required","input_number","button","btnText","ContactListItem","contactName","contactNumber","onClickDeleteContact","listItem","listItemText","onClick","ContactList","autoClose","Filter","filterInput","Container","children","container","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e591a481.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__1ejsr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__KxU5y\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { nanoid } from 'nanoid';\r\nimport { ADD, DELETE, CHANGE_FILTER } from './contacts-types';\r\n\r\nconst addContacts = createAction(ADD, ({ name, number }) => {\r\n  return {\r\n    payload: {\r\n      id: nanoid(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContacts = createAction(DELETE);\r\nconst changeFilter = createAction(CHANGE_FILTER);\r\n\r\nconst contactsActions = { addContacts, deleteContacts, changeFilter };\r\n\r\nexport default contactsActions;\r\n","export const ADD = 'contacts/add';\r\nexport const DELETE = 'contacts/delete';\r\nexport const CHANGE_FILTER = 'contacts/changeFilter';\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './contacts-actions';\r\n\r\nconst initialState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contacts = createReducer(initialState, {\r\n  [contactsActions.addContacts]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n  [contactsActions.deleteContacts]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ contacts, filter });\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'phonebook',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: { contacts: persistReducer(contactsPersistConfig, contactsReducer) },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({ serializableCheck: false }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","export const getContacts = state => state.contacts;\r\nexport const getFilter = state => state.filter;\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state.contacts);\r\n  const filters = state.contacts.filter;\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filters.toLowerCase()),\r\n  );\r\n};\r\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\nimport s from './FormContact.module.css';\n\nfunction FormContact() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    contacts.contacts.map(contact => contact.name).includes(name)\n      ? toast.warn(`${name} is already in your phonebook`)\n      : dispatch(contactsActions.addContacts({ name, number }));\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input_name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={name}\n          onChange={handleChange}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input_number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          value={number}\n          onChange={handleChange}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        <span className={s.btnText}>Add contact</span>\n      </button>\n    </form>\n  );\n}\n\nexport default FormContact;\n","import PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({\n  contactName,\n  contactNumber,\n  onClickDeleteContact,\n}) => {\n  return (\n    <li className={s.listItem}>\n      <span className={s.listItemText}>{contactName}:</span>\n      <span className={s.listItemText}>{contactNumber}</span>\n      <button className={s.button} type=\"button\" onClick={onClickDeleteContact}>\n        Delete contact\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onClickDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport ContactListItem from '../ContactList/ContactListItem/ContactListItem';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          contactName={name}\n          contactNumber={number}\n          onClickDeleteContact={() => {\n            dispatch(contactsActions.deleteContacts(id));\n            toast('Deleted', { autoClose: 3000 });\n          }}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport contactsActions from '../../redux/contacts/contacts-actions';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = e => {\n    dispatch(contactsActions.changeFilter(e.target.value));\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={s.filterInput}\n        type=\"text\"\n        value={filter}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import FormContact from '../FormContact';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport Container from '../Container';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n\nexport default function App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <FormContact />\n      <h2>Contacts</h2>\n      <Filter value={getFilter} />\n      <ContactList />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContact_form__2rP2c\",\"label\":\"FormContact_label__2DMm-\",\"input_name\":\"FormContact_input_name__3NY1H\",\"input_number\":\"FormContact_input_number__26RIg\",\"button\":\"FormContact_button__2uYOV\",\"btnText\":\"FormContact_btnText__sluw6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__1dfJo\",\"listItemText\":\"ContactListItem_listItemText__1lAud\",\"button\":\"ContactListItem_button__199nb\"};"],"sourceRoot":""}